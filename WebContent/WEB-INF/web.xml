<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app >
	<display-name>SwaggerForWebService</display-name>

	<servlet>
		<!-- 自己定名字，随便取 -->
		<servlet-name>jerseyws</servlet-name>
		<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
		<init-param>
			<param-name>javax.ws.rs.Application</param-name>
			<!-- 自己的继承了ResourceConfig的类名 -->
			<param-value>com.likeyichu.webservice.App</param-value>
		</init-param>
<!-- 		 <init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>
                com.wordnik.swagger.jaxrs.json
            </param-value>
        </init-param>-->
         <init-param>
            <param-name>jersey.config.server.provider.classnames</param-name>
            <param-value>
                com.wordnik.swagger.jersey.listing.ApiListingResourceJSON,
                com.wordnik.swagger.jersey.listing.JerseyApiDeclarationProvider,
                com.wordnik.swagger.jersey.listing.JerseyResourceListingProvider
            </param-value>
        </init-param>
		<!-- 指定这个“jerseyws” Servlet被tomcat加载的顺序 -->
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
        <servlet-name>SwaggerBootstrap</servlet-name>
        <servlet-class>io.swagger.api.util.Bootstrap</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>
    
	<servlet-mapping>
		<servlet-name>jerseyws</servlet-name>
		<!-- 如果项目名为ABC,那么www.abc.com/ABC/*的请求都会被jersey框架处理-->
		<url-pattern>/api/*</url-pattern>
	</servlet-mapping>
</web-app>
